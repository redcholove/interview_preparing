'''
Example 1:

Input: nums = [1,2,3]
Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]
Example 2:

Input: nums = [0,1]
Output: [[0,1],[1,0]]
Example 3:

Input: nums = [1]
Output: [[1]]
'''

class Solution:
    def permute(self, nums):
        #求出所有排列組和解
        
        #dfs
        #choose one element, mark visited
        #if len() == len(nums) -> insert path
        self.result = []
        
        if len(nums) == 0:
            return self.result
            
        def dfs(nums, path):
            if len(path) == len(nums):
                self.result.append(path)
                return
            
            for i in range(len(nums)):
                if nums[i] == '#':
                    continue
                else:
                    tmp = nums[i]
                    nums[i] = '#'
                    dfs(nums, path+[tmp])
                    nums[i] = tmp
        dfs(nums, [])
        return self.result
        
    
if __name__ == '__main__':
    sol = Solution()
    nums = [1,2,3]
    result = sol.permute(nums)
    print(result)
    print('success')
    print('time complexity: O(?)')
    print('space complexity: O(?)')
